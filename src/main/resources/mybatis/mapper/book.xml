<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.gdu.book.mapper.BookMapper">

	<resultMap type="BookReviewDTO" id="BookReviewMap">
		<id column="BOOK_REVIEW_NO" property="bookReviewNo"/>
		<result column="BOOK_NO" property="bookNo"/>
		<result column="BOOK_REVIEW" property="bookReview"/>
		<result column="BOOK_RATING" property="bookRating"/>
		<result column="BOOK_REVIEW_CREATED_AT" property="bookReviewCreatedAt"/>
		<association javaType="UserDTO" property="userDTO">
			<id column="USER_NO" property="userNo"/>
			<result column="USER_ID" property="userId"/>
		</association>
	</resultMap>
	
	<select id="getBookCount" resultType="int">
		SELECT COUNT(*)
		  FROM BOOK_T
	</select>
	
	<select id="selectBookList" parameterType="Map" resultType="BookDTO">
		SELECT B.BOOK_NO, B.BOOK_TITLE, B.BOOK_PRICE, B.BOOK_AT, B.BOOK_AUTHOR, B.BOOK_IMAGE, B.BOOK_DESCRIPTION
		  FROM (SELECT BOOK_NO, BOOK_TITLE, BOOK_PRICE, BOOK_AT, BOOK_AUTHOR, BOOK_IMAGE, BOOK_DESCRIPTION
		          FROM BOOK_T) B
		ORDER BY BOOK_NO ASC
		LIMIT #{begin}, #{recordPerPage}
	</select>
	
	<select id="searchBook" parameterType="BookSearchDTO" resultType="BookDTO">
		SELECT BOOK_NO, BOOK_TITLE, BOOK_PRICE, BOOK_AT, BOOK_AUTHOR, BOOK_IMAGE, BOOK_DESCRIPTION
		  FROM BOOK_T
		 WHERE ${column} LIKE CONCAT('%', #{searchText}, '%')
	</select>

	<select id="selectBookDetail" parameterType="String" resultType="BookDTO">
		SELECT *
		  FROM BOOK_T
		 WHERE BOOK_NO = #{bookNo}
	</select>
	
	<select id="selectBookReview" parameterType="String" resultMap="BookReviewMap">
		SELECT B.BOOK_REVIEW_NO, B.BOOK_NO, B.BOOK_REVIEW, B.BOOK_RATING, U.USER_ID, B.BOOK_REVIEW_CREATED_AT
		  FROM USER_T U INNER JOIN BOOK_REVIEW_T B
		    ON U.USER_NO = B.USER_NO
		 WHERE BOOK_NO = #{bookNo} 	 
	</select>

	<insert id="insertBookReview" parameterType="BookReviewDTO" useGeneratedKeys="true" keyProperty="bookReviewNo">
		INSERT INTO BOOK_REVIEW_T(
			  USER_NO
			, BOOK_NO 
			, BOOK_REVIEW
			, BOOK_RATING
			, BOOK_REVIEW_CREATED_AT
		) VALUES (
			  #{userDTO.userNo}
			, #{bookNo}
			, #{bookReview}
			, #{bookRating}
			, NOW()
		)
	</insert>
	
	<delete id="deleteBookReview">
		DELETE 
		  FROM BOOK_REVIEW_T
		 WHERE BOOK_REVIEW_NO = #{bookReviewNo}
	</delete>
	
	
</mapper>